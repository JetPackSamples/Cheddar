apply plugin: "com.android.application"
apply from: rootProject.file("gradle/base-module.gradle")

android {

    defaultConfig {
        applicationId = "co.adrianblan.cheddar"
        versionCode = 1
        versionName = "0.1"
    }

    signingConfigs {
        getByName("debug") {
            storeFile = rootProject.file("debug.keystore")
            storePassword = "debugkey"
            keyAlias = "debugkey"
            keyPassword = "debugkey"
        }
        create("release") {
            def propsFile = rootProject.file("keystore.properties")
            if (propsFile.exists()) {
                val props = Properties()
                props.load(FileInputStream(propsFile))
                storeFile = file(props["storeFile"])
                storePassword = props["storePassword"]
                keyAlias = props["keyAlias"]
                keyPassword = props["keyPassword"]
            } else {
                println("File keystore.properties not found.")
            }
        }
    }

    buildTypes {
        getByName("debug") {
            signingConfig = signingConfigs.getByName("debug")
            applicationIdSuffix ".debug"
            minifyEnabled false
        }
        getByName("release") {
            signingConfig = signingConfigs.getByName("release")
            minifyEnabled = true
            shrinkResources = true
            proguardFiles(
                    getDefaultProguardFile("proguard-android-optimize.txt"),
                    "../proguard-rules.pro"
            )
        }
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerVersion Versions.composeCompiler
        kotlinCompilerExtensionVersion Versions.compose
    }

    packagingOptions {
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }
}

// Used for compose dev15
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        languageVersion = "1.4"
        jvmTarget = "1.8"
        freeCompilerArgs += ["-Xallow-jvm-ir-dependencies", "-Xskip-prerelease-check"]
    }
}

dependencies {
    implementation(project(":feature-storynavigation"))
    implementation(project(":feature-storyfeed"))
    implementation(project(":feature-storydetail"))
    implementation(project(":feature-storycontent"))

    implementation(project(":core"))
    implementation(project(":common"))
    implementation(project(":common-ui"))
    implementation(project(":common-test"))

    debugImplementation(Dependencies.leakcanary)
}